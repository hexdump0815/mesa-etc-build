# new mesa build including libdrm and wayland-protocols via buildenvs
# directories:
# - /compile/doc/mesa-etc-build - the files in this dir
# - /compile/doc/buildenvs - https://github.com/hexdump0815/buildenvs
# - /opt/mesa - installation dir of the built mesa
cd /compile/doc
git clone https://github.com/hexdump0815/buildenvs
cd buildenvs
# bullseye
./docker-buildenv-bullseye.sh
./buildenv-bullseye.sh
# bookworm
#./docker-buildenv-bookworm.sh
#./buildenv-bookworm.sh
# focal
#./docker-buildenv-focal.sh
#./buildenv-focal.sh
# jammy
#./docker-buildenv-jammy.sh
#./buildenv-jammy.sh
# the next steps are done inside of the buildenv docker container in its shell
# maybe cleanup from an older build?
#rm -rf /opt/mesa
apt-get -y install python3-dev x11proto-gl-dev libx11-dev libxext-dev libxdamage-dev libxfixes-dev libx11-xcb-dev libxcb-glx0-dev libxxf86vm-dev libxcb-dri2-0-dev libxcb-xfixes0-dev libxcb-dri3-dev libxcb-present-dev libxcb-sync-dev libxshmfence-dev libxrandr-dev llvm-dev meson python3-mako python3-setuptools libwayland-dev wayland-protocols libwayland-egl-backend-dev pkg-config build-essential zlib1g-dev git bison flex libxcb-shm0-dev
# arch dependent /opt/mesa/lib dir - only the proper one should be set
# i686
ARCH_DEP_LIB_DIR=i386-linux-gnu
# x86_64
ARCH_DEP_LIB_DIR=x86_64-linux-gnu
# armv7l
ARCH_DEP_LIB_DIR=arm-linux-gnueabihf
# aarch64
ARCH_DEP_LIB_DIR=aarch64-linux-gnu
cd /compile/source
# cleanup potential old builds
rm -rf meson drm wayland-protocols mesa
# we need a newer meson than what comes with ubuntu 18.04 to build libdrm
git clone https://github.com/mesonbuild/meson.git
cd meson
git checkout 0.63.3
# libdrm
cd /compile/source
git clone https://gitlab.freedesktop.org/mesa/drm.git
cd drm
git checkout libdrm-2.4.113
mkdir build
cd build
python3 ../../meson/meson.py .. . -Dnouveau=enabled -Dfreedreno=enabled -Dtegra=enabled -Dexynos=enabled -Detnaviv=disabled -Dintel=disabled -Dradeon=disabled -Damdgpu=disabled -Dvmwgfx=disabled -Domap=disabled --prefix=/opt/mesa
ninja -j 4
ninja install
# wayland-protocols
cd /compile/source
git clone https://gitlab.freedesktop.org/wayland/wayland-protocols.git
cd wayland-protocols
git checkout 1.27
mkdir build
cd build
python3 ../../meson/meson.py .. . --buildtype=release --prefix=/opt/mesa
ninja -j 4
ninja install
# mesa
cd /compile/source
git clone https://gitlab.freedesktop.org/mesa/mesa.git
cd mesa
# older version still working for the nyan chromebook with tegra/nouveau
# and newer xorg server - later versions do not work with this hardware
#git checkout mesa-21.0.3
git checkout mesa-22.2.2
# in some situations it still seems to be required to increase one paramater for lima
patch -p1 < /compile/doc/mesa-etc-build/limit-max-draws-per-job.patch
# this patch is recommended for armv7l to make tegra work at least somewhat with old xorg
#patch -p1 < /compile/doc/mesa-etc-build/tegra-hack.patch
mkdir build
cd build
python3 ../../meson/meson.py .. . --pkg-config-path=/opt/mesa/lib/${ARCH_DEP_LIB_DIR}/pkgconfig,/opt/mesa/share/pkgconfig -Ddri-drivers= -Dvulkan-drivers= -Dgallium-drivers=freedreno,lima,panfrost,vc4,v3d,nouveau,tegra,virgl,kmsro,swrast -Dlibunwind=disabled -Dplatforms=x11,wayland -Dglx=dri -Degl=enabled -Ddri3=enabled -Dglvnd=false -Dgles1=enabled -Dgles2=enabled -Dllvm=enabled -Dshared-glapi=enabled -Dbackend=ninja -Dbuildtype=debugoptimized --prefix=/opt/mesa
ninja -j 4
ninja install
mkdir -p /compile/result/mesa-etc-build
# the filename uploaded to the releases is opt-mesa-22.1.1-bullseye-aarch64.tar.gz etc.
tar czf /compile/result/mesa-etc-build/opt-mesa.tar.gz /opt/mesa
